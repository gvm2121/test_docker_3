version: "3.9"
services:
  app:
    build: .
    volumes:
      - static:/code/static
      - .:/code
    ports:
      - "8000:8000"
    command: python3 manage.py runserver 0.0.0.0:8000
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    depends_on:
      db:
        condition: service_healthy
      
    restart: always
  celery:
        build: .
        command: celery -A celeryapp_app.tasks worker -B -l INFO
        volumes:
            - .:/usr/src/app
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
            - CELERY_BROKER=redis://redis:6379/0
            - CELERY_BACKEND=redis://redis:6379/0
        depends_on:
            - app
            - redis
  celery-beat:
    build: .
    command: celery -A celeryapp beat --loglevel=info
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis


  db:
    image: postgres:15
    volumes:
      - ../data:/var/lib/postgresql@15/data/
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=dj_ctl_comb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: "redis:alpine" 



  

volumes:
  pg_data:
  static:
  .:

